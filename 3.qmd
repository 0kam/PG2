# QGISとRStudioのインストールと基礎

## はじめる前に
この章から、いよいよ具体的な作業に移っていきます。
始める前に、授業用のデータを格納するフォルダを作っておきましょう。フォルダ名は`PG2`とします。Physical Geography 2、この授業のタイトルですね。`PG2/`フォルダを置く場所はどこでも良いですが、親フォルダも含めて全角文字（ひらがな、カタカナ、漢字）が無いことが条件です。Windowsであれば「ドキュメント」、Macであれば「書類」直下などに置くのが良いでしょう（これらのフォルダは日本語で表示されていますが、内部的にはDocumentsという名前のフォルダになっています）。`PG2`フォルダの下に、この授業の章ごとにフォルダを作っていくことにします。今回は3つ目のテーマなので、`PG2/3/`という名前のフォルダを作りましょう。

## QGISのインストール
QGISは無料で使えるオープンソースの[地理情報システム（Geographical Information System, GIS）](https://sorabatake.jp/16915/)です。
主要なOS全てに対応していてユーザー数も多く、さまざまなプラグインが公開されており、Web上の解説記事なども豊富にあります。

### Windows
[このインストラクション](https://sk-lb.net/qgis-install/)に従いましょう。書いてあるとおり、ユーザー名に半角ローマ字以外が使われているとエラーを起こします。これはQGIS以外の多くの海外製ソフトウェア（後でインストールするRStudio含む）でも同様です。面倒ですが、新しいアカウントを作ってください。

### Mac
[このインストラクション](https://qgis.mierune.co.jp/posts/howto_1_install_qgis#mac%E3%81%A7%E3%81%AEqgis%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%89%8B%E9%A0%86)に従いましょう。

### 国土地理院標準地図を読み込む
この授業では、さまざまな地理情報を表示するためのツールとしてQGISを使います
この際に、背景となる地図があると便利です。背景地図には、インターネット経由でXYZタイル形式のデータを取得するのが一般的です。QGISではOpenStreetMap(OSM)が使えるようになっていますが、日本国内に限って言えば（等高線が描かれた）国土地理院標準地図を使うのが便利です。

まず、QGISを開き、左側の「ブラウザ」から「XYZタイル」を選び、右クリックし、「新規接続」をクリックします。
![](images/3/qgis_gsi_1.png)
新規接続設定画面が出てくるので、

- 名前に `地理院標準地図`
- URLに `https://cyberjapandata.gsi.go.jp/xyz/std/{z}/{x}/{y}.png`

を入力し、「OK」を押します。

![](images/3/qgis_gsi_2.png)
「ブラウザ」の「XYZタイル」に「地理院標準地図」が追加されているので、クリックして地図を表示します。ズームしながらいろいろな場所を見てみましょう！

![](images/3/qgis_gsi_3.png)
### ベクターデータとラスターデータ
前提として、GISにおけるデータの種類について簡単に紹介します。
GISで用いられるデータは主に**ベクターデータ**と**ラスターデータ**に分類されます。

-  **ベクターデータ**は、市区町村や建物などを**ポイント、ライン、ポリゴン**で表したものです。
それぞれのポイント、ライン、ポリゴンには市区町村名や建物名などの**属性(Attribute)**を紐づけます。ベクターデータはシェープファイル（.shp）やGeoJSON（.geojson）、KML（.kml）といったファイル形式で保存されます。
![同じ建物を面で表現した場合（左図）とポイントで表現した場合（右図）QGIS LAB 「GISデータについて知ろう！ベクタデータとラスタデータの違いを解説」（https://qgis.mierune.co.jp/posts/howto_1_about_data-type）より ](https://images.microcms-assets.io/assets/6c4873527fd24450a0163b40e8e173f2/8f22dcb8d6434fcbb17d76a7f88073ef/howto_1_about_data-type_2.png)
- **ラスターデータ**は一定間隔の格子状にその場所のデータ（標高、土地被覆、色など）が格納されたデータのことを指します。たとえば、航空写真や衛生画像が該当します。この格子の目の大きさを**ピクセルサイズ**ないしは**空間解像度**と呼び、これが細かいほど細部まで詳細に表すことができますが、データサイズが大きくなります。ラスターデータはGeoTIFF（.tiff、.tif）形式で保存されることが多いです。
![ラスタデータは格子状に並んだピクセルで校正されている（地球地図日本（国土地理院）を加工して作成）。「GISデータについて知ろう！ベクタデータとラスタデータの違いを解説」（https://qgis.mierune.co.jp/posts/howto_1_about_data-type）より](https://images.microcms-assets.io/assets/6c4873527fd24450a0163b40e8e173f2/9849488dc31a4faa80d799a2302157a2/howto_1_about_data-type_5.png)

[参考：QGIS LAB 「GISデータについて知ろう！ベクタデータとラスタデータの違いを解説」](https://qgis.mierune.co.jp/posts/howto_1_about_data-type)

### 国土地理院数値標高モデル（DEM）を使えるようにする
生態学や自然地理学で使う最も基本的な地理情報に、地形データがあります。
地形データは、5mや1m間隔の格子の中に、その場所の標高が格納されたラスタデータ（数値標高モデル、Digital Elevation Model (DEM)）として表現されます。
日本国内においては、国土地理院がDEMを作成・公開しており、誰でも無償で利用できます。一方、国土地理院DEMはGISでは取り扱いづらいデータ形式で配布されているため、QGISのプラグインを使ってGeoTIFF形式に変換します。

ここでは、[QuickDEM4JPプラグイン](https://github.com/MIERUNE/QuickDEM4JP)を使います。
まず、QGIS上部のメニューバーから「プラグイン」→「プラグインの管理とインストール」をクリックします。
![](images/3/qgis_dem4jp_1.png)
検索窓に`QuickDEM4JP`と入力し、「QuickDEM4JP」を選択してインストールボタンを押します。
![](images/3/qgis_dem4jp_2.png)
試しに、駿河台キャンパス周辺のDEMをダウンロードして表示してみましょう。
まずは、基盤地図情報ダウンロードサービスのアカウントを作成します。以下のURLからメールアドレスを登録し、本登録まで進んでください。
https://service-login.gsi.go.jp/regist/agreement

アカウントができたらDEMデータのダウンロードに移りましょう。国土地理院の[基盤地図情報ダウンロードサービス](https://service.gsi.go.jp/kiban/app/)を開き、右上の「ログイン」ボタンから、先ほど作成したアカウントにログインします。

「基本項目・数値標高モデルのダウンロード」から「数値標高モデル」のボタンを押します。
表示された地図をズームして駿河台キャンパスを含むメッシュをクリックします。画面下の「検索結果リスト」タブにデータが追加されるので「ダウンロードリストに全て追加」を押します。「ダウンロードリスト」タブを開き、「ダウンロード等」に進みます。
![](images/3/qgis_dem4jp_3.png)

追加したDEMデータを選択し、「ダウンロード」ボタンを押します。登録したメールアドレスにダウンロードリンクが送られてきます。

![](images/3/qgis_dem4jp_4.png)
`FG-GML-533946-DEM5A-20250620.zip`というファイルがダウンロードされるので、これを`PG2/3/`以下に移動させます。

画面をQGISに戻しましょう。上部メニューバーの「Processing」から「Toolbox」をクリックして、プロセシングールボックスを開きます。先ほど追加した「QuickDEM4JP」をクリックします。
![](images/3/qgis_dem4jp_5.png)

「DEM」に、先ほどダウンロードした`PG2/3/FG-GML-533946-DEM5A-20250620.zip`を、「GeoTIFFの出力先」に適当なファイル名（`PG2/3/chiyodaku_dem.tif`）を選択し、「実行」を押します。
![](images/3/qgis_dem4jp_6.png)

以下のように、標高が格納されたファイルが表示されるはずです！
![](images/3/qgis_dem4jp_7.png)
この図だと白黒でちょっと見辛いので、表示をいじってみましょう。
左下「レイヤ」の`chiyodaku_dem`を右クリックし、「プロパティ」を開きます。
- カラーマップの変更
  - 左のタブ一覧から「シンボロジ」タブを開きます。
  - 「レンダリングタイプ」を「単バンド擬似カラー」にします。
  - 「カラーランプ」を「Viridis」にします。
  - 「OK」を押します
- 透明度の変更
  -  左のタブ一覧から「透明度」タブを開きます。
  - 「グローバルな不透明度」を70%にします。
  - 「OK」を押します。

![](images/3/qgis_dem4jp_8.png)
鮮やかなカラーマップが表示されました！半透明で標準地図も見ることができます。
本郷台地から不忍池に伸びる谷地形が印象的ですね！

#### 余裕がある人向けの発展課題
東京全域のDEMをダウンロードして一つのGeoTIFFファイルにまとめ、QGIS上で表示してみましょう。
ヒント：「QGIS ラスター 結合」で検索

## RとRStudioのインストール
[R](https://www.r-project.org/)は主に統計解析を目的として作られたプログラミング言語・実行環境で、フリーで使うことができます。世界中のRユーザーが開発したパッケージが無数に公開されており、地理情報解析向けのパッケージも多数あります。

地理情報解析にRを使うメリットはいろいろあります。

- マウス操作で行うGISソフトと違い、操作をプログラムで記述するため**再現性が担保される**。  
- 統計解析や機械学習、論文に使える綺麗な図の作成まで一貫して行える. 
- 解析結果をいちいち表示しないので**GISソフトより計算が速い**. 
- フリーソフトなので、所属機関が変わっても使える. 
- 構文が簡単でプログラミングの初歩的な学習に向いている……. 

[RStudio](https://posit.co/download/rstudio-desktop/)は（主に）R言語のプログラミング・実行を行うための統合開発環境（IDE、プログラムを書くエディタと実行環境がセットになったもの）です。必須ではありませんが、RStudioを使うとより効率的にRプログラミングができます。

インストールは[このインストラクション](https://best-biostatistics.com/r/rstudio_start.html)に従いましょう。

### Rパッケージのインストール
最後に、地理情報解析に用いるRパッケージをインストールします。
後の章では他のパッケージも追加しますが、ここではとりあえず以下をインストールします。

- `tidyverse`：データ処理とグラフ作成に使うパッケージ群
- `sf`：ベクターデータ処理用のパッケージ
- `terra`：ラスターデータ処理用のパッケージ
- `tidyterra`：`terra`を用いたラスター演算を行いやすくするためのパッケージ

### Windows
RStudioの`Console`ペイン（左下）に
```
install.packages(c("tidyverse", "sf", "terra", "tidyterra"))
```
と入力し、エンターを押します。

### Mac
Macではいくつか依存するパッケージを事前にインストールする必要があります。
ここでは、[homebrew](https://brew.sh/ja/)というパッケージマネージャを使ってインストールしましょう。
まず、「ターミナル」アプリを開き、以下を実行します。

```
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
```

これで`brew`コマンドが使えるようになりました。
続いて、必要なパッケージをインストールします。
以下をターミナルで実行します。

```
brew install harfbuzz fribidi libpng libtiff
brew install pkg-config gdal
```

画面をRStudioに切り替え、コンソールペインに以下を貼り付けて実行します。
```
install.packages("sf", type = "source", configure.args = "--with-proj-lib=$(brew --prefix)/lib/")
install.packages(c("tidyverse", "terra", "tidyterra"))
```
エラーが出たら教えてください！
